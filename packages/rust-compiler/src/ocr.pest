/* PROGRAM MATCHING */

program = _{SOI ~ lines ~ EOI}

/* 
 * A line list can have any number of line breaks at the start and end and any number of lines in between.
 * However the last line in a line list may be a statement (because there might not be a line break after it).
 * So for the majority of the statement, the OR expression will match `line` but if the parser is on the final line and it doesn't have a line break after it, it will match it as a statement
 * However both line and statement are silent so this logic will not appear in the parse tree
 */
lines = _{
	NEWLINE* ~ (line | statement)* ~ NEWLINE* 
}

line = _{
	statement ~ NEWLINE+
}

statement = _{ comment | assignment }

/* STATEMENT TYPES */

identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

commentDelimeter = _{ "//"}
comment = { commentDelimeter ~ (!(NEWLINE) ~ ANY)* }

declarationKeyword = _{ constant | global }
assignment = ${
	(declarationKeyword ~ WHITESPACE+)? ~ WHITESPACE* ~ identifier ~ WHITESPACE* ~ assignmentOperator ~ WHITESPACE* ~ "test"
}

/* KEYWORDS */
constant = { "const" }
global = { "global" }

/* OPERATORS */
assignmentOperator = _{ "=" }

/* MISC */

WHITESPACE = _{ " " | "\t" }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }